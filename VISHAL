#include<stdio.h>
int search(int arr[],int n,int x){
    for(int i=0;i<n;i++)
    if(arr[i]==x){
        return i;
    }
    return -1;
}
int main(){
    int x;
    int arr[]={7,4,1,8,5,2,96,3};
    scanf("%d",&x);
    int n=(sizeof(arr)/sizeof(arr[0]));
    int result=search(arr,n,x);
    if(result==-1)
    printf("not found");
    else printf("element is at index %d",result);
    return 0;
}
//linear search without recursion
-------------------------------------------------------------------------------------------------------------------------
//linea search with recursion
#include<stdio.h>

int linearSearch(int arr[], int val, int arraystart, int arrayend) {
    if (arraystart > arrayend) {
        return -1; 
    }

    if (arr[arraystart] == val) {
        return arraystart; 
    }

    return linearSearch(arr, val, arraystart + 1, arrayend); 
}

int main() {
    int val;
    int arr[] = {7, 4, 1, 8, 5, 2, 96, 3};
    scanf("%d", &val);

    int n = sizeof(arr) / sizeof(arr[0]);
    int result = linearSearch(arr, val, 0, n - 1);

    if (result == -1) {
        printf("Element not found\n");
    } else {
        printf("Element is at index %d\n", result);
    }

    return 0;
}
---------------------------------------------------------------------------------------------------------------------------------------------------
//binary with recursion
// Online C compiler to run C program online
#include <stdio.h>
int binarySearch(int a[],int beg,int end,int val){
    int mid;
    
    if(end>=beg){
        
        mid =(beg+end)/2;
if(a[mid]==val){
    return mid+1;
}
else if(a[mid]<val){
    return binarySearch(a,mid+1,end,val);
}else{
    return binarySearch(a,beg,mid-1,val);
}
}
    return -1;
}
int main() {
    int val=41;
    int a[]={11,14,25,30,40,41,52,57,70};
    int n=(sizeof(a)/sizeof(a[0]));
    int result=binarySearch(a,0,n-1,val);
    if(result==-1)
    printf("not found");
    else printf("element is at index %d",result);
    return 0;
}
-----------------------------------------------------------------------------------------------------------
binary without recursion 
#include <stdio.h>
int Search(int arr[],int s,int e,int x){
    while (s<=e) {
        int m=(s+e)/2;
        if (arr[m]==x)               //l is first index, r is last index, m is mid
            return m;
        if (arr[m]<x)
            s=m+1;
        else
            e=m-1;
    }
    return -1;
}
int main(){
    int find;
    int arr[]={2,3,4,5,6,7,8,9};
    int n=sizeof(arr)/sizeof(arr[0]);
    scanf("%d",&find);
    int r=Search(arr,0,n-1,find);
    (r==-1)?printf("Element is not in array"):printf("element is at index %d",r);
    return 0;
}
------------------------------------------------------------------------------------------------------------------------
//bubble sort 

// Online C compiler to run C program online
#include <stdio.h>
void bugga(int a[],int n){
    for(int i=0;i<n;i++){
        for(int j=0;j<n-1;j++){
            if(a[j]>a[j+1]){
            int temp=a[j];
            a[j]=a[j+1];
            a[j+1]=temp;
            
        }
    }
}
}
int main() {
 int a[]={9,8,7,6,5,4,1,2,3};
 int n=sizeof(a)/sizeof(a[0]);
 bugga(a,n);
 for(int i=0;i<n;i++){
     printf("%d",a[i]);
 }

    return 0;
}
----------------------------------
